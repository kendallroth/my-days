diff --git a/node_modules/react-native-paper/lib/commonjs/components/Dialog/DialogActions.js b/node_modules/react-native-paper/lib/commonjs/components/Dialog/DialogActions.js
index 2af0dc7..afb49b9 100644
--- a/node_modules/react-native-paper/lib/commonjs/components/Dialog/DialogActions.js
+++ b/node_modules/react-native-paper/lib/commonjs/components/Dialog/DialogActions.js
@@ -52,7 +52,7 @@ const DialogActions = props => {
   return /*#__PURE__*/React.createElement(_reactNative.View, _extends({}, props, {
     style: [isV3 ? styles.v3Container : styles.container, props.style]
   }), React.Children.map(props.children, (child, i) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {
-    compact: true,
+    compact: props.compact ?? false,
     uppercase: !isV3,
     style: isV3 && {
       paddingRight: i + 1 === actionsLength ? 0 : 8
diff --git a/node_modules/react-native-paper/lib/commonjs/components/List/ListItem.js b/node_modules/react-native-paper/lib/commonjs/components/List/ListItem.js
index 963ad89..0071fc6 100644
--- a/node_modules/react-native-paper/lib/commonjs/components/List/ListItem.js
+++ b/node_modules/react-native-paper/lib/commonjs/components/List/ListItem.js
@@ -87,7 +87,11 @@ const ListItem = _ref => {
     }, description);
   };
   const renderTitle = () => {
-    const titleColor = theme.isV3 ? theme.colors.onSurface : (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
+    const titleColor = theme.isV3
+      ? !rest.disabled
+        ? theme.colors.onSurface
+        : theme.colors.onSurfaceDisabled
+      : (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
     return typeof title === 'function' ? title({
       selectable: false,
       ellipsizeMode: titleEllipsizeMode,
@@ -102,7 +106,11 @@ const ListItem = _ref => {
       }, titleStyle]
     }, title);
   };
-  const descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
+  const descriptionColor = theme.isV3
+     ? !rest.disabled 
+        ? theme.colors.onSurfaceVariant
+        : theme.colors.onSurfaceDisabled
+    : (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
   return /*#__PURE__*/React.createElement(_TouchableRipple.default, _extends({}, rest, {
     style: [theme.isV3 ? styles.containerV3 : styles.container, style],
     onPress: onPress,
diff --git a/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtonItem.js b/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtonItem.js
index c98ba84..0513461 100644
--- a/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtonItem.js
+++ b/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtonItem.js
@@ -25,6 +25,7 @@ const SegmentedButtonItem = _ref => {
     icon,
     testID,
     label,
+    labelStyle,
     onPress,
     segment,
     density = 'regular',
@@ -142,7 +143,7 @@ const SegmentedButtonItem = _ref => {
     color: disabled ? textColor : undefined
   })) : null, /*#__PURE__*/React.createElement(_Text.default, {
     variant: "labelLarge",
-    style: [styles.label, labelTextStyle],
+    style: [styles.label, labelTextStyle, labelStyle],
     selectable: false,
     numberOfLines: 1
   }, label))));
diff --git a/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtons.js b/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtons.js
index b056fd6..7879036 100644
--- a/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtons.js
+++ b/node_modules/react-native-paper/lib/commonjs/components/SegmentedButtons/SegmentedButtons.js
@@ -94,6 +94,7 @@ const SegmentedButtons = _ref => {
       checked: checked,
       segment: segment,
       density: density,
+      labelStyle: item.labelStyle,
       onPress: onPress,
       style: [item.style, disabledChildStyle],
       theme: theme
diff --git a/node_modules/react-native-paper/lib/module/components/Dialog/DialogActions.js b/node_modules/react-native-paper/lib/module/components/Dialog/DialogActions.js
index 0434b3d..89f3fd9 100644
--- a/node_modules/react-native-paper/lib/module/components/Dialog/DialogActions.js
+++ b/node_modules/react-native-paper/lib/module/components/Dialog/DialogActions.js
@@ -44,7 +44,7 @@ const DialogActions = props => {
   return /*#__PURE__*/React.createElement(View, _extends({}, props, {
     style: [isV3 ? styles.v3Container : styles.container, props.style]
   }), React.Children.map(props.children, (child, i) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {
-    compact: true,
+    compact: props.compact ?? false,
     uppercase: !isV3,
     style: isV3 && {
       paddingRight: i + 1 === actionsLength ? 0 : 8
diff --git a/node_modules/react-native-paper/lib/module/components/List/ListItem.js b/node_modules/react-native-paper/lib/module/components/List/ListItem.js
index 8633697..5fff053 100644
--- a/node_modules/react-native-paper/lib/module/components/List/ListItem.js
+++ b/node_modules/react-native-paper/lib/module/components/List/ListItem.js
@@ -78,7 +78,11 @@ const ListItem = _ref => {
     }, description);
   };
   const renderTitle = () => {
-    const titleColor = theme.isV3 ? theme.colors.onSurface : color(theme.colors.text).alpha(0.87).rgb().string();
+    const titleColor = theme.isV3
+     ? !rest.disabled 
+        ? theme.colors.onSurface
+        : theme.colors.onSurfaceDisabled
+    : color(theme.colors.text).alpha(0.87).rgb().string();
     return typeof title === 'function' ? title({
       selectable: false,
       ellipsizeMode: titleEllipsizeMode,
@@ -93,7 +97,11 @@ const ListItem = _ref => {
       }, titleStyle]
     }, title);
   };
-  const descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();
+  const descriptionColor = theme.isV3
+     ? !rest.disabled 
+        ? theme.colors.onSurfaceVariant
+        : theme.colors.onSurfaceDisabled
+    : color(theme.colors.text).alpha(0.54).rgb().string();
   return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {
     style: [theme.isV3 ? styles.containerV3 : styles.container, style],
     onPress: onPress,
diff --git a/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtonItem.js b/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtonItem.js
index 11e3274..0d762e6 100644
--- a/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtonItem.js
+++ b/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtonItem.js
@@ -16,6 +16,7 @@ const SegmentedButtonItem = _ref => {
     icon,
     testID,
     label,
+    labelStyle,
     onPress,
     segment,
     density = 'regular',
@@ -133,7 +134,7 @@ const SegmentedButtonItem = _ref => {
     color: disabled ? textColor : undefined
   })) : null, /*#__PURE__*/React.createElement(Text, {
     variant: "labelLarge",
-    style: [styles.label, labelTextStyle],
+    style: [styles.label, labelTextStyle, labelStyle],
     selectable: false,
     numberOfLines: 1
   }, label))));
diff --git a/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtons.js b/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtons.js
index 9c54e28..256d4d6 100644
--- a/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtons.js
+++ b/node_modules/react-native-paper/lib/module/components/SegmentedButtons/SegmentedButtons.js
@@ -85,6 +85,7 @@ const SegmentedButtons = _ref => {
       checked: checked,
       segment: segment,
       density: density,
+      labelStyle: item.labelStyle,
       onPress: onPress,
       style: [item.style, disabledChildStyle],
       theme: theme
diff --git a/node_modules/react-native-paper/lib/typescript/components/Dialog/DialogActions.d.ts b/node_modules/react-native-paper/lib/typescript/components/Dialog/DialogActions.d.ts
index a3031be..179e1c7 100644
--- a/node_modules/react-native-paper/lib/typescript/components/Dialog/DialogActions.d.ts
+++ b/node_modules/react-native-paper/lib/typescript/components/Dialog/DialogActions.d.ts
@@ -6,6 +6,8 @@ export declare type Props = React.ComponentPropsWithRef<typeof View> & {
      * Content of the `DialogActions`.
      */
     children: React.ReactNode;
+    /** Whether Dialog Action buttons should be compact */
+    compact?: boolean;
     style?: StyleProp<ViewStyle>;
     /**
      * @optional
diff --git a/node_modules/react-native-paper/src/components/Dialog/DialogActions.tsx b/node_modules/react-native-paper/src/components/Dialog/DialogActions.tsx
index 4b812b0..28c99f2 100644
--- a/node_modules/react-native-paper/src/components/Dialog/DialogActions.tsx
+++ b/node_modules/react-native-paper/src/components/Dialog/DialogActions.tsx
@@ -10,6 +10,8 @@ export type Props = React.ComponentPropsWithRef<typeof View> & {
    * Content of the `DialogActions`.
    */
   children: React.ReactNode;
+  /** Whether Dialog Action buttons should be compact */
+  compact?: boolean;
   style?: StyleProp<ViewStyle>;
   /**
    * @optional
@@ -63,7 +65,8 @@ const DialogActions = (props: Props) => {
       {React.Children.map(props.children, (child, i) =>
         React.isValidElement(child)
           ? React.cloneElement(child as React.ReactElement<any>, {
-              compact: true,
+              // Allow overriding compact prop via 'DialogAction'
+              compact: props.compact ?? false,
               uppercase: !isV3,
               style: isV3 && {
                 paddingRight: i + 1 === actionsLength ? 0 : 8,
diff --git a/node_modules/react-native-paper/src/components/List/ListItem.tsx b/node_modules/react-native-paper/src/components/List/ListItem.tsx
index 2a5b3f6..03d051b 100644
--- a/node_modules/react-native-paper/src/components/List/ListItem.tsx
+++ b/node_modules/react-native-paper/src/components/List/ListItem.tsx
@@ -191,7 +191,9 @@ const ListItem = ({
 
   const renderTitle = () => {
     const titleColor = theme.isV3
-      ? theme.colors.onSurface
+      ? !rest.disabled
+        ? theme.colors.onSurface
+        : theme.colors.onSurfaceDisabled
       : color(theme.colors.text).alpha(0.87).rgb().string();
 
     return typeof title === 'function' ? (
@@ -214,7 +216,9 @@ const ListItem = ({
   };
 
   const descriptionColor = theme.isV3
-    ? theme.colors.onSurfaceVariant
+    ? !rest.disabled
+      ? theme.colors.onSurfaceVariant
+      : theme.colors.onSurfaceDisabled
     : color(theme.colors.text).alpha(0.54).rgb().string();
 
   return (
diff --git a/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtonItem.tsx b/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtonItem.tsx
index f50186a..28b8525 100644
--- a/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtonItem.tsx
+++ b/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtonItem.tsx
@@ -52,6 +52,7 @@ export type Props = {
    * Label text of the button.
    */
   label?: string;
+  labelStyle?: StyleProp<ViewStyle>;
   /**
    * Button segment.
    */
@@ -84,6 +85,7 @@ const SegmentedButtonItem = ({
   icon,
   testID,
   label,
+  labelStyle,
   onPress,
   segment,
   density = 'regular',
@@ -199,7 +201,7 @@ const SegmentedButtonItem = ({
           ) : null}
           <Text
             variant="labelLarge"
-            style={[styles.label, labelTextStyle]}
+            style={[styles.label, labelTextStyle, labelStyle]}
             selectable={false}
             numberOfLines={1}
           >
diff --git a/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtons.tsx b/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtons.tsx
index 7239ce7..9a92b67 100644
--- a/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtons.tsx
+++ b/node_modules/react-native-paper/src/components/SegmentedButtons/SegmentedButtons.tsx
@@ -65,6 +65,7 @@ export type Props = {
     accessibilityLabel?: string;
     onPress?: (event: GestureResponderEvent) => void;
     label?: string;
+    labelStyle?: StyleProp<ViewStyle>;
     showSelectedCheck?: boolean;
     style?: StyleProp<ViewStyle>;
     testID?: string;
@@ -172,6 +173,7 @@ const SegmentedButtons = ({
             checked={checked}
             segment={segment}
             density={density}
+            labelStyle={item.labelStyle}
             onPress={onPress}
             style={[item.style, disabledChildStyle]}
             theme={theme}
